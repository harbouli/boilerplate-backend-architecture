version: "3.8"

services:
  kong-database:
    image: postgres:13
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "54321:5432"
    volumes:
      - kong_data:/var/lib/postgresql/data

  kong-migration:
    image: kong:latest
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
    command: ["kong", "migrations", "bootstrap"]

  kong:
    image: kong:latest

    build:
      context: ./api-geteway

    depends_on:
      - kong-migration
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    volumes:
      - /etc/localtime:/etc/localtime:ro

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-topics-init:
    image: wurstmeister/kafka:latest
    depends_on:
      - kafka
    entrypoint:
      [
        "/bin/bash",
        "-c",
        "sleep 20 && /opt/kafka/bin/kafka-topics.sh --create --topic example-topic --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1",
      ]

  nestjs-microservice:
    build: ./nestjs-microservice
    ports:
      - "3030:3030"
    depends_on:
      - kafka
      - kafka-topics-init

  go-microservice:
    build: ./go-microservice
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka
      - kafka-topics-init

  django-microservice:
    build: ./django-microservice
    ports:
      - "8081:8000"
    depends_on:
      - kafka

volumes:
  kong_data:
